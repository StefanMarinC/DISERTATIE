@model DISERTATIE_5.Models.EditSubscriberCase

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>EditPerson</title>
</head>
<body style="max-width:100%">
    @if (TempData["ErrorEditPerson"] != null)
    {
        <div class="modal" tabindex="-1" role="dialog" style="display:block" id="modal">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">Access denied!</h3>
                    </div>
                    <div class="modal-body">
                        <h4>You are not allowed to access this module!</h4>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" id="buttonclose" style="background-color:#9c301a; color:white">Close</button>
                    </div>
                </div>
            </div>
        </div>
    }

    <div style="background-color:#9c301a; height:75px;">
        <div style="display:flex; padding-left:20px;">
            <img src="~/Resources/Logo.png" style="height:75px; width:180px; cursor:pointer" onclick="@("window.location.href='" + @Url.Action("Home", "Home") + "'")" />
            <div style="width:75%; text-align:center; height:75px">
                <div style="font-size:large; font-family:Arial sans-serif; font-weight:bold; color:white; padding-top:20px">
                    CASES
                </div>
            </div>
            <div style="width:220px; height:75px; display:flex; justify-content:space-around">
                <div style="font-size:large; font-family:Arial sans-serif; color:white; padding-top:20px;">
                    @Session["Username"].ToString()
                </div>
                <div class="form-group" style="text-align:center; padding:20px 0 0 0">
                    <div class="col-md-offset-2 col-md-10" style="margin-left:0; margin-right:0;">
                        <input value="Logout" class="btn btn-primary" style="background-color:lightslategray; border-color:lightslategray; width:100px" onclick="@("window.location.href='" + @Url.Action("Logout", "Login") + "'")" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4 style="text-align:center">Edit person</h4>
            <hr />
            <div>


                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group" style="max-width:100%">
                    @Html.LabelFor(model => model.main, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @if (Model.main == true)
                            {
                                @Html.CheckBoxFor(model => model.main, new { onclick="return false"})
                            }
                            else
                            {
                                @Html.EditorFor(model => model.main)
                            }
                            @Html.ValidationMessageFor(model => model.main, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group" style="max-width:100%">
                    @Html.LabelFor(model => model.customer_type, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.customer_type, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.customer_type, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group" style="max-width:100%">
                    @Html.LabelFor(model => model.ssn, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ssn, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ssn, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="max-width:100%">
                    @Html.LabelFor(model => model.first_name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.first_name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.first_name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="max-width:100%">
                    @Html.LabelFor(model => model.last_name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.last_name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.last_name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="max-width:100%">
                    @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.gender, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="max-width:100%">
                    @Html.LabelFor(model => model.birth_date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.birth_date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.birth_date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="max-width:100%">
                    @Html.LabelFor(model => model.birth_place, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.birth_place, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.birth_place, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="max-width:100%">
                    @Html.LabelFor(model => model.subscriber_type, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="padding-right:0; margin-right:0">
                        @Html.EditorFor(model => model.subscriber_type, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.subscriber_type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="max-width:100%">
                    <div class="col-md-offset-2 col-md-10" style="display:flex;">
                        <button type="submit" class="btn btn-default" style="margin-right:50px">
                            Save
                        </button>
                        <button style="cursor:pointer" class="btn btn-default" onclick="@("window.location.href='" + @Url.Action("Cancel", "Case", new { case_id = ViewBag.editPersonCase }) + "'")">
                            Cancel
                        </button>
                    </div>
                </div>

            </div>
            <div style="padding-left:50px; font-size:large; padding-top:20px">
                <div style="color:#9c301a">
                    IMPORTANT!
                </div>
                <div style="display:flex">
                    The customer type must be one of:
                    @for (int i = 0; i < ((List<string>)ViewBag.PersonTypeList).Count(); i++)
                    {
                        <div style="padding-left:10px">
                            @ViewBag.PersonTypeList[i]
                        </div>
                        if (i < ((List<string>)ViewBag.PersonTypeList).Count() - 1)
                        {
                            <div>, </div>
                        }
                    }
                </div>
                <div style="display:flex">
                    The gender must be one of:
                    @for (int i = 0; i < ((List<string>)ViewBag.PersonGender).Count(); i++)
                    {
                        <div style="padding-left:10px">
                            @ViewBag.PersonGender[i],
                        </div>
                    }
                    <div>
                        , or nothing
                    </div>
                </div>
                <div style="display:flex">
                    The subscriber type must be one of:
                    @for (int i = 0; i < ((List<string>)ViewBag.SubscriberType).Count(); i++)
                    {
                        <div style="padding-left:10px">
                            @ViewBag.SubscriberType[i]
                        </div>
                        if (i < ((List<string>)ViewBag.SubscriberType).Count() - 1)
                        {
                            <div>, </div>
                        }
                    }
                </div>
                <div style="color:#9c301a">
                    If the mentioned fields are not completed correctly, then the modifications will not be saved!
                </div>
            </div>

        </div>
    }
</body>
</html>
