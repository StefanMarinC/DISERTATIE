@model DISERTATIE_5.Models.EditSubscriberCase

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>EditPerson</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body style="max-width:100%; padding: 0; background-color:#3a3a3c">
    @if (TempData["ErrorEditPerson"] != null)
    {
        <div class="modal" tabindex="-1" role="dialog" style="display:block" id="modal">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">Error!</h3>
                    </div>
                    <div class="modal-body">
                        <h4>@TempData["ErrorEditPerson"].ToString()</h4>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" id="buttonclose" style="background-color:#9c301a; color:white">Close</button>
                    </div>
                </div>
            </div>
        </div>
        <script>
            var modal = document.getElementById("modal");
            var btn = document.getElementById("buttonclose");

            btn.onclick = function () {
                modal.style.display = "none";
            }

            window.onclick = function (event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                }
            }
        </script>
    }

    <div style="background-color:#9c301a; height:75px;">
        <div style="display:flex; padding-left:20px;">
            <img src="~/Resources/Logo.png" style="height:75px; width:180px; cursor:pointer" onclick="@("window.location.href='" + @Url.Action("Home", "Home") + "'")" />
            <div style="width:75%; text-align:center; height:75px">
                <div style="font-size:large; font-family:Arial sans-serif; font-weight:bold; color:white; padding-top:20px">
                    CASES
                </div>
            </div>
            <div style="width:220px; height:75px; display:flex; justify-content:space-around">
                <div style="font-size:large; font-family:Arial sans-serif; color:white; padding-top:20px;">
                    @Session["Username"].ToString()
                </div>
                <div class="form-group" style="text-align:center; padding:20px 0 0 0">
                    <div class="col-md-offset-2 col-md-10" style="margin-left:0; margin-right:0;">
                        <input value="Logout" class="btn btn-primary" style="background-color:lightslategray; border-color:lightslategray; width:100px" onclick="@("window.location.href='" + @Url.Action("Logout", "Login") + "'")" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div style="padding-top:50px">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal" style="color:white">
                <div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group" style="max-width:100%">
                        @Html.LabelFor(model => model.main, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @if (Model.main == true)
                                {
                                    @Html.CheckBoxFor(model => model.main, new { onclick = "return false", @name = "main" })
                                }
                                else
                                {
                                    @Html.EditorFor(model => model.main, new { @name = "main" })
                                }
                                @Html.ValidationMessageFor(model => model.main, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group" style="max-width:100%">
                        @Html.LabelFor(model => model.customer_type, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="padding-top:7px; color:black">
                            @Html.DropDownListFor(model => model.customer_type, new SelectList(ViewBag.PersonTypeList), new { htmlAttributes = new { @class = "form-control", @name = "customer_type" } })
                            @Html.ValidationMessageFor(model => model.customer_type, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group" style="max-width:100%">
                        @Html.LabelFor(model => model.ssn, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ssn, new { htmlAttributes = new { @class = "form-control", @name = "ssn" } })
                            @Html.ValidationMessageFor(model => model.ssn, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="max-width:100%">
                        @Html.LabelFor(model => model.first_name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.first_name, new { htmlAttributes = new { @class = "form-control", @name = "first_name" } })
                            @Html.ValidationMessageFor(model => model.first_name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="max-width:100%">
                        @Html.LabelFor(model => model.last_name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.last_name, new { htmlAttributes = new { @class = "form-control", @name = "last_name" } })
                            @Html.ValidationMessageFor(model => model.last_name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="max-width:100%">
                        @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="padding-top:7px; color:black">
                            @Html.DropDownListFor(model => model.gender, new SelectList(ViewBag.PersonGender), new { htmlAttributes = new { @class = "form-control", @name = "gender" } })
                            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="max-width:100%">
                        @Html.LabelFor(model => model.birth_date, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.birth_date, new { htmlAttributes = new { @class = "form-control", @type = "date", @max = DateTime.Today.ToString("yyyy-MM-dd"), @min = DateTime.Now.AddYears(-70).ToString("yyyy-MM-dd"), @name = "birth_date" } })
                            @Html.ValidationMessageFor(model => model.birth_date, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="max-width:100%">
                        @Html.LabelFor(model => model.birth_place, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.birth_place, new { htmlAttributes = new { @class = "form-control", @name = "birth_place" } })
                            @Html.ValidationMessageFor(model => model.birth_place, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="max-width:100%">
                        @Html.LabelFor(model => model.subscriber_type, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="padding-top:7px; color:black">
                            @Html.DropDownListFor(model => model.subscriber_type, new SelectList(ViewBag.SubscriberType), new { htmlAttributes = new { @class = "form-control", @name = "subscriber_type" } })
                            @Html.ValidationMessageFor(model => model.subscriber_type, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="width:100%">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" style="background-color:#9c301a; color:white; border:none" />
                        </div>
                    </div>

                </div>

            </div>
        }
    </div>

    <div class="form-group" style="text-align:center; padding:20px 0 0 0">
        <div class="col-md-offset-2 col-md-10" style="margin-left:0; margin-right:0;">
            <input value="Back" class="btn btn-primary" style="background-color:#9c301a; border-color:#9c301a; width:100px" onclick="@("window.location.href='" + @Url.Action("Case", "Cases", new { case_id = ViewBag.addDebtCase }) + "'")">
        </div>
    </div>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jqueryval")

</body>
</html>
